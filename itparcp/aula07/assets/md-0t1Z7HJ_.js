import{o as l,c as t,k as u,e as o,ac as e,q as p,s as i,B as r}from"./modules/vue-DTzR55es.js";import{a as d}from"./default-9L3jNy08.js";import{u as c,f as m}from"./slidev/context-ytdhxw4Q.js";import"./index-bpwv83xF.js";import"./modules/shiki-CNQQ1ItU.js";const q={__name:"aula07.md__slidev_20",setup(f){const{$slidev:_,$nav:x,$clicksContext:n,$clicks:g,$page:v,$renderContext:$,$frontmatter:s}=c();return n.setup(),(C,a)=>(l(),t(d,p(i(r(m)(r(s),19))),{default:u(()=>a[0]||(a[0]=[o("h1",null,"Conjunto de Instruções",-1),o("hr",null,null,-1),o("ul",null,[o("li",null,[o("p",null,[o("strong",null,"Código de operação:"),e(" especifica a operação a ser realizada (por exemplo, ADD, E/S). A operação é especificada por um código binário conhecido como código da operação, ou "),o("strong",null,"opcode"),e(".")])]),o("li",null,[o("p",null,[o("strong",null,"Referência a operando fonte"),e(": a operação pode envolver um ou mais operandos fontes, ou seja, operandos que são entradas para a operação.")])]),o("li",null,[o("p",null,[o("strong",null,"Referência a operando de resultado"),e(": a operação deve produzir um resultado.")])]),o("li",null,[o("p",null,[o("strong",null,"Referência à próxima instrução"),e(": diz ao processador onde buscar a próxima instrução depois que a execução dessa instrução estiver completa.")])])],-1)])),_:1},16))}};export{q as default};
