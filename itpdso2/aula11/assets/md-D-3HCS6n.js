import{b as r,o as i,w as n,g as a,ad as e,v as u,x as d,T as t}from"./modules/vue-CxbCntZl.js";import{a as m}from"./default-Cr_xOddj.js";import{u as c,f as p}from"./slidev/context-CccwhjY7.js";import"./index-BQ2CihmP.js";import"./modules/shiki-B23HkriT.js";const C={__name:"aula11.md__slidev_23",setup(f){const{$clicksContext:o,$frontmatter:l}=c();return o.setup(),(v,s)=>(i(),r(m,u(d(t(p)(t(l),22))),{default:n(()=>s[0]||(s[0]=[a("h1",null,[e("JavaFX: A Interface "),a("strong",null,"ObservableList<>"),e(":")],-1),a("hr",null,null,-1),a("ul",null,[a("li",null,[a("p",null,[e("Em JavaFx, há uma Interface chamada "),a("strong",null,"ObservableList<>"),e('. As classes que implementam esta Interface passam a ser "Observáveis", isto é, tem suas mudanças rastreadas, facilitando a atualização de dados em diversas partes do sistema quando a lista é alterada.')])]),a("li",null,[a("p",null,'Já usamos essa lista indiretamente no método "getChildren()" dos painéis de layout. O método getChildren() retorna uma Lista Observável de objetos da Classe Node (superclasse da maioria dos componentes JavaFx).')]),a("li",null,[a("p",null,[e("Aqui com banco de dados, esse tipo de lista será utilizado para associar uma lista com a Tabela (TableView). Desta forma, "),a("strong",null,"toda vez que a lista for modificada"),e(", a tabela é atualizada "),a("strong",null,"automaticamente"),e(".")])])],-1)])),_:1,__:[0]},16))}};export{C as default};
