import{o,c as l,k as r,q as i,s as n,A as s,e as a,a6 as e}from"../modules/vue-BRnwFeGr.js";import{a as d}from"../default-Dli-TNRJ.js";import{aC as t}from"../index-CUMJKYxj.js";import{p as m,u,f as c}from"./context-Cz_IOy-O.js";import"../modules/shiki-CNdCreKD.js";const p=a("h1",null,[e("JavaFX: A Interface "),a("strong",null,"ObservableList<>"),e(":")],-1),f=a("hr",null,null,-1),_=a("ul",null,[a("li",null,[a("p",null,[e("Em JavaFx, há uma Interface chamada "),a("strong",null,"ObservableList<>"),e('. As classes que implementam esta Interface passam a ser "Observáveis", isto é, tem suas mudanças rastreadas, facilitando a atualização de dados em diversas partes do sistema quando a lista é alterada.')])]),a("li",null,[a("p",null,'Já usamos essa lista indiretamente no método "getChildren()" dos painéis de layout. O método getChildren() retorna uma Lista Observável de objetos da Classe Node (superclasse da maioria dos componentes JavaFx).')]),a("li",null,[a("p",null,[e("Aqui com banco de dados, esse tipo de lista será utilizado para associar uma lista com a Tabela (TableView). Desta forma, "),a("strong",null,"toda vez que a lista for modificada"),e(", a tabela é atualizada "),a("strong",null,"automaticamente"),e(".")])])],-1),O={__name:"23",setup(v){return m(t),u(),(b,h)=>(o(),l(d,i(n(s(c)(s(t),22))),{default:r(()=>[p,f,_]),_:1},16))}};export{O as default};
